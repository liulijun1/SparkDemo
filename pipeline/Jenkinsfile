#!/usr/bin/env groovy

pipeline {
    agent any

    environment {
        flavor='test'
    }

    parameters {
        string(name: 'Greeting', defaultValue: 'Hello', description: 'How should I greet the world?')
    }

    stages {
        stage('get environment') {
            steps {
                sh 'printenv'
            }
        }

        stage('get parameter') {
            steps {
                echo "${params.Greeting} Spark!"
            }
        }

        stage('Build') {
            steps {
                sh 'pwd'
                sh './gradlew clean jar'
                archiveArtifacts '**/build/libs/*.jar'
            }
        }

        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }

    post {
        always {
            //junit '**/target/*.xml'
            echo "build result $currentBuild.result"
        }

        failure {
            //mail to: team@example.com, subject: 'The Pipeline failed :('
            echo "build failure"
        }

        unstable {
            echo "build unstable"
        }

        success {
            echo "build success"
        }

        changed {
            echo "changed"
        }
    }
}